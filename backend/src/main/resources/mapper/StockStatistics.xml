<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bookhub.bookhub_back.mapper.StockStatisticsMapper">
<!-- 1. -->
    <select id="findTotalAmountByBranchAndType" resultType="BranchStockBarChartDto">
        SELECT
            br.branch_name AS branchName,
            COALESCE(SUM(CASE WHEN sl.action_type = 'IN' THEN sl.amount ELSE 0 END), 0) AS inAmount,
            COALESCE(SUM(CASE WHEN sl.action_type = 'OUT' THEN sl.amount ELSE 0 END), 0) AS outAmount,
            COALESCE(SUM(CASE WHEN sl.action_type = 'LOSS' THEN sl.amount ELSE 0 END), 0) AS lossAmount
        FROM branches br
        LEFT JOIN stock_logs sl
            ON sl.branch_id = br.branch_id
            AND YEAR(sl.actioned_at) = #{year}
            AND MONTH(sl.actioned_at) = #{month}
        GROUP BY branchName
    </select>

<!-- 2. -->
    <select id="findTimeStockStatisticsByYear" resultType="TimeStockChartResponseDto">
        SELECT br.branch_name,
        m.month as month,
        COALESCE(SUM(CASE WHEN sl.action_type = 'IN' THEN sl.amount ELSE 0 END),0) AS isAmount,
        COALESCE(SUM(CASE WHEN sl.action_type = 'LOSS' THEN sl.amount ELSE 0 END), 0) AS lossAmount
        FROM branches br
        CROSS JOIN (
            SELECT 1 AS month UNION ALL SELECT 2 UNION ALL SELECT 3 UNION ALL SELECT 4
            UNION ALL SELECT 5 UNION ALL SELECT 6 UNION ALL SELECT 7 UNION ALL SELECT 8
            UNION ALL SELECT 9 UNION ALL SELECT 10 UNION ALL SELECT 11 UNION ALL SELECT 12
            ) m
        LEFT JOIN stock_logs sl
            ON sl.branch_id = br.branch_id
            AND YEAR(sl.actioned_at) = #{year}
            AND MONTH(sl.actioned_at) = m.month
        GROUP BY br.branch_name, m.month
        ORDER BY br.branch_name, m.month
    </select>

<!-- 3. -->
    <select id="findZeroStockStatistics" resultType="ZeroStockResponseDto">
        SELECT br.branch_name AS branchName,
               COUNT(s.stock_id) AS zeroStockCount
        FROM branches br
        LEFT JOIN stocks s
            ON s.branch_id = br.branch_id
            AND s.book_amount = 0
        GROUP BY branchName
    </select>

<!-- 4. -->
    <select id="findCategoryStockByBranch" resultType="CategoryStockResponseDto">
        SELECT bc.category_name AS categoryName,
               SUM(s.book_amount) AS totalAmount
        FROM stocks s
        JOIN books b ON b.book_isbn = s.book_isbn
        JOIN book_categories bc ON bc.category_id = b.category_id
        JOIN branches br ON br.branch_id = s.branch_id
        WHERE br.branch_name = #{branchName}
        GROUP BY categoryName
        ORDER BY totalAmount DESC
    </select>
</mapper>