<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bookhub.bookhub_back.mapper.BestSellerMapper">

    <!-- 1. 베스트셀러 -->

    <!--    1-1. 총합 베스트셀러 (100위까지)-->
    <select id="findTop100BestSellers" resultType="BestSellerDto">
        SELECT
            b.book_isbn,
            b.book_title,
            a.author_name,
            p.publisher_name,
            bc.category_name,
            b.cover_url,
            SUM(cod.amount) AS totalSales
        FROM customer_order_details cod
                 JOIN customer_orders co ON cod.customer_order_id = co.customer_order_id
                 JOIN books b ON cod.book_isbn = b.book_isbn
                 JOIN authors a ON b.author_id = a.author_id
                 JOIN publishers p ON b.publisher_id = p.publisher_id
                 JOIN book_categories bc ON b.category_id = bc.category_id
                 LEFT JOIN refund_orders r ON r.customer_order_id = co.customer_order_id
        WHERE r.customer_order_id IS NULL
        GROUP BY b.book_isbn, b.book_title, a.author_name,
                 p.publisher_name, bc.category_name, b.cover_url
        ORDER BY totalSales DESC
            LIMIT 100
    </select>

    <!--    1-2. 기간별 베스트셀러 (100위까지)-->
    <!--    1-2-1. 주간-->
    <select id="findWeeklyBestSellers" resultType="BestSellerDto">
        SELECT
            b.book_isbn,
            b.book_title,
            a.author_name,
            p.publisher_name,
            bc.category_name,
            b.cover_url,
            SUM(cod.amount) AS totalSales
        FROM customer_order_details cod
                 JOIN customer_orders co ON cod.customer_order_id = co.customer_order_id
                 JOIN books b ON cod.book_isbn = b.book_isbn
                 JOIN authors a ON b.author_id = a.author_id
                 JOIN publishers p ON b.publisher_id = p.publisher_id
                 JOIN book_categories bc ON b.category_id = bc.category_id
                 LEFT JOIN refund_orders r ON r.customer_order_id = co.customer_order_id
        WHERE co.ordered_at >= DATE_SUB(NOW(), INTERVAL 7 DAY)
          AND r.customer_order_id IS NULL
        GROUP BY b.book_isbn, b.book_title, a.author_name,
                 p.publisher_name, bc.category_name, b.cover_url
        ORDER BY totalSales DESC
            LIMIT 100;
    </select>

    <!--    1-2-2. 월간-->
    <select id="findMonthlyBestSellers" resultType="BestSellerDto">
        SELECT
            b.book_isbn,
            b.book_title,
            a.author_name,
            p.publisher_name,
            bc.category_name,
            b.cover_url,
            SUM(cod.amount) AS totalSales
        FROM customer_order_details cod
                 JOIN customer_orders co ON cod.customer_order_id = co.customer_order_id
                 JOIN books b ON cod.book_isbn = b.book_isbn
                 JOIN authors a ON b.author_id = a.author_id
                 JOIN publishers p ON b.publisher_id = p.publisher_id
                 JOIN book_categories bc ON b.category_id = bc.category_id
                 LEFT JOIN refund_orders r ON r.customer_order_id = co.customer_order_id
        WHERE co.ordered_at >= DATE_SUB(NOW(), INTERVAL 1 MONTH)
          AND r.customer_order_id IS NULL
        GROUP BY b.book_isbn, b.book_title, a.author_name,
                 p.publisher_name, bc.category_name, b.cover_url
        ORDER BY totalSales DESC
            LIMIT 100;
    </select>

    <!--    1-2-3. 연간-->
    <select id="findYearlyBestSellers" resultType="BestSellerDto">
        SELECT
            b.book_isbn,
            b.book_title,
            a.author_name,
            p.publisher_name,
            bc.category_name,
            b.cover_url,
            SUM(cod.amount) AS totalSales
        FROM customer_order_details cod
                 JOIN customer_orders co ON cod.customer_order_id = co.customer_order_id
                 JOIN books b ON cod.book_isbn = b.book_isbn
                 JOIN authors a ON b.author_id = a.author_id
                 JOIN publishers p ON b.publisher_id = p.publisher_id
                 JOIN book_categories bc ON b.category_id = bc.category_id
                 LEFT JOIN refund_orders r ON r.customer_order_id = co.customer_order_id
        WHERE co.ordered_at >= DATE_SUB(NOW(), INTERVAL 1 YEAR)
          AND r.customer_order_id IS NULL
        GROUP BY b.book_isbn, b.book_title, a.author_name,
                 p.publisher_name, bc.category_name, b.cover_url
        ORDER BY totalSales DESC
            LIMIT 100;
    </select>

    <!--    1-3. 카테고리별 베스트셀러 (20위까지)-->
    <select id="findBestSellersByCategory" resultType="BestSellerDto" parameterType="long">
        SELECT
            b.book_isbn,
            b.book_title,
            a.author_name,
            p.publisher_name,
            bc.category_name,
            b.cover_url,
            SUM(cod.amount) AS totalSales
        FROM customer_order_details cod
                 JOIN customer_orders co ON cod.customer_order_id = co.customer_order_id
                 JOIN books b ON cod.book_isbn = b.book_isbn
                 JOIN authors a ON b.author_id = a.author_id
                 JOIN publishers p ON b.publisher_id = p.publisher_id
                 JOIN book_categories bc ON b.category_id = bc.category_id
                 LEFT JOIN refund_orders r ON r.customer_order_id = co.customer_order_id
        WHERE co.ordered_at >= DATE_SUB(NOW(), INTERVAL 7 DAY)
          AND (bc.category_id = #{categoryId} OR bc.parent_category_id = #{categoryId})
          AND r.customer_order_id IS NULL
        GROUP BY b.book_isbn, b.book_title, a.author_name,
                 p.publisher_name, bc.category_name, b.cover_url
        ORDER BY totalSales DESC
            LIMIT 20;
    </select>
</mapper>